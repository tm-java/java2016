Q）第4章のAttrクラスと、Attributedインターフェースについて、
どちらかがどちらかのネストした型であるべきか？
A）どちらもネストした型にしない
Attrクラスは、基本的な属性クラスであり、その集まりを操作するための構造（Attributedインターフェース）は必要ない。
ゆえに、AttributedインターフェースはAttrクラスのネストした型であるべきでない。
一方、Attributedインターフェースは、Attrオブジェクトをメソッド内で扱っており、ネストした型としてAttrクラスを
定義することは可能である。しかし、Attrクラスをネストした型としない理由が２点ある。
１点目は、Attrオブジェクトのフィールドは変更可能である点である。インターフェース内に定義すると、インターフェースで
共有されることになるが、Attributedを実装しているすべてのクラスで共有すべきではない。
２点目は、Attrクラスが基本的な属性クラスである点である。
Attrクラスは、様々なオブジェクトに対応するために拡張される可能性が高い、ゆえに、Attributedインターフェースの中のみで
完結するものではない。
ゆえにネストした型にするべきではない。

2/2
どちらにも入れない。
AttrクラスはAttributedインターフェースがないと存在できないか？＞違う。
逆に、Attributedインターフェースはコンテナの役割を果たしてるだけ、別にAttrは必要でない。
あと、このインターフェースの中に、だらだらっと実装が入ってくるのがなんかいや。
