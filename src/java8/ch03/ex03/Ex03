
現在は、実行時に、-eaオプションをつけるとassertが有効になる。
デフォルトは無効。
無効時は、クラスローダーが、assert文を全て消してからメモリ上に展開するためにランタイムコストが削れる。

もしライブラリで実現した場合は、
class Assert {
	boolean ENABLE; 
}

どこかのコード内
if (Assert.ENABEL) {
	assert(メッセージ)
}
で、コンパイラが、このENABLを見てここのコード一式を全て削ってバイトコードにする。
が、プログラマがいちいちif文を書かなければならないために、オラクルはこのライブラリで提供することをやめた。

ラムダ式があれば、assert(Predicate, Supplier)で提供できる。
Predicateで有効無効を判定して、有効だったらSupplierを呼ぶ。
ランタイムコストをそこそこ落とせる。（今の仕組みより落としはできないが）